// Code generated by protoc-gen-go. DO NOT EDIT.
// source: route.proto

package bproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RouteReq struct {
	// nod 目标服务节点名
	Nod string `protobuf:"bytes,1,opt,name=nod,proto3" json:"nod,omitempty"`
	// service 功能函数名
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// body
	ReqBody []byte `protobuf:"bytes,3,opt,name=reqBody,proto3" json:"reqBody,omitempty"`
	// meta 元数据用于用户定制开发
	Meta                 []*Header `protobuf:"bytes,4,rep,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RouteReq) Reset()         { *m = RouteReq{} }
func (m *RouteReq) String() string { return proto.CompactTextString(m) }
func (*RouteReq) ProtoMessage()    {}
func (*RouteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{0}
}

func (m *RouteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReq.Unmarshal(m, b)
}
func (m *RouteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReq.Marshal(b, m, deterministic)
}
func (m *RouteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReq.Merge(m, src)
}
func (m *RouteReq) XXX_Size() int {
	return xxx_messageInfo_RouteReq.Size(m)
}
func (m *RouteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReq.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReq proto.InternalMessageInfo

func (m *RouteReq) GetNod() string {
	if m != nil {
		return m.Nod
	}
	return ""
}

func (m *RouteReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *RouteReq) GetReqBody() []byte {
	if m != nil {
		return m.ReqBody
	}
	return nil
}

func (m *RouteReq) GetMeta() []*Header {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Header struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{1}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Header) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type RouteRes struct {
	ResBody              []byte   `protobuf:"bytes,1,opt,name=resBody,proto3" json:"resBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteRes) Reset()         { *m = RouteRes{} }
func (m *RouteRes) String() string { return proto.CompactTextString(m) }
func (*RouteRes) ProtoMessage()    {}
func (*RouteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{2}
}

func (m *RouteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteRes.Unmarshal(m, b)
}
func (m *RouteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteRes.Marshal(b, m, deterministic)
}
func (m *RouteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteRes.Merge(m, src)
}
func (m *RouteRes) XXX_Size() int {
	return xxx_messageInfo_RouteRes.Size(m)
}
func (m *RouteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteRes.DiscardUnknown(m)
}

var xxx_messageInfo_RouteRes proto.InternalMessageInfo

func (m *RouteRes) GetResBody() []byte {
	if m != nil {
		return m.ResBody
	}
	return nil
}

func init() {
	proto.RegisterType((*RouteReq)(nil), "bproto.routeReq")
	proto.RegisterType((*Header)(nil), "bproto.Header")
	proto.RegisterType((*RouteRes)(nil), "bproto.routeRes")
}

func init() { proto.RegisterFile("route.proto", fileDescriptor_0984d49a362b6b9f) }

var fileDescriptor_0984d49a362b6b9f = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x31, 0x8b, 0x83, 0x30,
	0x14, 0x80, 0x2f, 0xa7, 0xc4, 0xbb, 0xe7, 0x71, 0x48, 0xa6, 0xd0, 0x49, 0x42, 0x07, 0x87, 0x62,
	0xc1, 0x4e, 0x5d, 0x3b, 0x75, 0xce, 0x3f, 0xd0, 0xfa, 0x28, 0xa2, 0x35, 0x35, 0x49, 0x05, 0xff,
	0x7d, 0x49, 0x6c, 0x3a, 0x74, 0xca, 0xfb, 0xbe, 0x17, 0xf8, 0x12, 0x48, 0xb5, 0x7a, 0x58, 0x2c,
	0xef, 0x5a, 0x59, 0xc5, 0x68, 0xe3, 0x4f, 0x61, 0xe1, 0xc7, 0x6b, 0x89, 0x13, 0xcb, 0x20, 0x1a,
	0x55, 0xcb, 0x49, 0x4e, 0x8a, 0x5f, 0xe9, 0x46, 0xc6, 0x21, 0x31, 0xa8, 0xe7, 0xee, 0x82, 0xfc,
	0xdb, 0xdb, 0x80, 0x6e, 0xa3, 0x71, 0x3a, 0xa9, 0x76, 0xe1, 0x51, 0x4e, 0x8a, 0x3f, 0x19, 0x90,
	0x09, 0x88, 0x6f, 0x68, 0x6b, 0x1e, 0xe7, 0x51, 0x91, 0x56, 0xff, 0xe5, 0x1a, 0x2a, 0xcf, 0x58,
	0xb7, 0xa8, 0xa5, 0xdf, 0x89, 0x1d, 0xd0, 0x95, 0x5d, 0xb3, 0xc7, 0x25, 0x34, 0x7b, 0x5c, 0x9c,
	0x99, 0xeb, 0xe1, 0xd5, 0x73, 0xa3, 0xd8, 0xbe, 0xdf, 0x68, 0xd6, 0xae, 0xf1, 0x5d, 0x12, 0xba,
	0x1e, 0xab, 0x23, 0xd0, 0xa1, 0x33, 0x16, 0x47, 0xb6, 0x87, 0xc4, 0xdd, 0xef, 0xc6, 0x2b, 0xcb,
	0x42, 0x3e, 0x7c, 0x72, 0xf3, 0x69, 0x8c, 0xf8, 0x6a, 0xa8, 0x37, 0x87, 0x67, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x12, 0x5b, 0xb2, 0x50, 0x22, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ListenClient is the client API for Listen service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ListenClient interface {
	Routing(ctx context.Context, in *RouteReq, opts ...grpc.CallOption) (*RouteRes, error)
}

type listenClient struct {
	cc *grpc.ClientConn
}

func NewListenClient(cc *grpc.ClientConn) ListenClient {
	return &listenClient{cc}
}

func (c *listenClient) Routing(ctx context.Context, in *RouteReq, opts ...grpc.CallOption) (*RouteRes, error) {
	out := new(RouteRes)
	err := c.cc.Invoke(ctx, "/bproto.listen/routing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListenServer is the server API for Listen service.
type ListenServer interface {
	Routing(context.Context, *RouteReq) (*RouteRes, error)
}

// UnimplementedListenServer can be embedded to have forward compatible implementations.
type UnimplementedListenServer struct {
}

func (*UnimplementedListenServer) Routing(ctx context.Context, req *RouteReq) (*RouteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Routing not implemented")
}

func RegisterListenServer(s *grpc.Server, srv ListenServer) {
	s.RegisterService(&_Listen_serviceDesc, srv)
}

func _Listen_Routing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenServer).Routing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bproto.listen/Routing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenServer).Routing(ctx, req.(*RouteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Listen_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bproto.listen",
	HandlerType: (*ListenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "routing",
			Handler:    _Listen_Routing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "route.proto",
}
