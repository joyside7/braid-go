name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master,develop ]
  pull_request:
    branches: [ master,develop ]


jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: golang:1.15.8

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      consul:
        image: consul:1.6.2
        options: >-
          --name=consul_s_1
          consul:1.6.2
          agent
          -server 
          -ui 
          -node=s_1 
          -bootstrap-expect=1 
          -client=0.0.0.0
      nsqlookupd:
        image: nsqio/nsq:v1.2.0
        options: >-
          --name lookupd
          nsqio/nsq:v1.2.0
          /nsqlookupd
      nsqd:
        image: nsqio/nsq:v1.2.0
        options: >-
          --name nsqd 
          nsqio/nsq:v1.2.0
          /nsqd 
          --broadcast-address=127.0.0.1 
          --lookupd-tcp-address=127.0.0.1:4160
      registrator:
        image: gliderlabs/registrator:latest
        options: >-
          --name=registrator
          --volume=/var/run/docker.sock:/tmp/docker.sock
          gliderlabs/registrator:latest
          --internal=false
          --ip=127.0.0.1
          consul://127.0.0.1:8500
      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: unit test
        run: |
          go version
          export MOCK_REDIS_ADDR=redis://127.0.0.1:6379/0
          export MOCK_CONSUL_ADDR=http://127.0.0.1:8900
          export MOCK_JAEGER_ADDR=http://127.0.0.1:9411/api/v2/spans
          export MOCK_NSQD_ADDR="127.0.0.1:4150"
          export MOCK_NSQ_LOOKUPD_ADDR="127.0.0.1:4161"
          go test -race -coverprofile=coverage.out ./...
